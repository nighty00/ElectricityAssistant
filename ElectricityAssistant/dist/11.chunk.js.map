{"version":3,"sources":["E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts-routing.module.ts","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.component.html","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.component.scss","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.component.ts","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.module.ts"],"names":[],"mappings":"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","file":"11.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChartsComponent } from './charts.component';\n\nconst routes: Routes = [\n    { path: '', component: ChartsComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ChartsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts-routing.module.ts","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Charts'\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Bar Chart\\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <canvas baseChart [datasets]=\\\"barChartData\\\" [labels]=\\\"barChartLabels\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\" [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                    <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"randomize()\\\">Update</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Doughnut Chart\\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <canvas baseChart height=\\\"180px\\\" [data]=\\\"doughnutChartData\\\" [labels]=\\\"doughnutChartLabels\\\" [chartType]=\\\"doughnutChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Radar Chart\\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <canvas baseChart height=\\\"150px\\\" [datasets]=\\\"radarChartData\\\" [labels]=\\\"radarChartLabels\\\" [chartType]=\\\"radarChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Pie Chart\\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <canvas baseChart height=\\\"150px\\\" [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Polar Area Chart\\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <canvas baseChart height=\\\"130px\\\" [data]=\\\"polarAreaChartData\\\" [labels]=\\\"polarAreaChartLabels\\\" [legend]=\\\"polarAreaLegend\\\" [chartType]=\\\"polarAreaChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Line Chart\\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <canvas baseChart height=\\\"130\\\" [datasets]=\\\"lineChartData\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"lineChartColors\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.component.html\n// module id = ../../../../../src/app/layout/charts/charts.component.html\n// module chunks = 11","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.component.scss\n// module id = ../../../../../src/app/layout/charts/charts.component.scss\n// module chunks = 11","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss'],\n    animations: [routerTransition()]\n})\nexport class ChartsComponent implements OnInit {\n    // bar chart\n    public barChartOptions: any = {\n        scaleShowVerticalLines: false,\n        responsive: true\n    };\n    public barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    public barChartType: string = 'bar';\n    public barChartLegend: boolean = true;\n\n    public barChartData: any[] = [\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\n    ];\n    // Doughnut\n    public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string = 'doughnut';\n    // Radar\n    public radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n    public radarChartData: any = [\n        { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\n    ];\n    public radarChartType: string = 'radar';\n    // Pie\n    public pieChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    public pieChartData: number[] = [300, 500, 100];\n    public pieChartType: string = 'pie';\n    // PolarArea\n    public polarAreaChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\n    public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\n    public polarAreaLegend: boolean = true;\n\n    public polarAreaChartType: string = 'polarArea';\n    // lineChart\n    public lineChartData: Array<any> = [\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\n    ];\n    public lineChartLabels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    public lineChartOptions: any = {\n        responsive: true\n    };\n    public lineChartColors: Array<any> = [\n        { // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        { // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        { // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n\n    // events\n    public chartClicked(e: any): void {\n        // console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        // console.log(e);\n    }\n\n    public randomize(): void {\n        // Only Change 3 values\n        const data = [\n            Math.round(Math.random() * 100),\n            59,\n            80,\n            (Math.random() * 100),\n            56,\n            (Math.random() * 100),\n            40\n        ];\n        const clone = JSON.parse(JSON.stringify(this.barChartData));\n        clone[0].data = data;\n        this.barChartData = clone;\n        /**\n         * (My guess), for Angular to recognize the change in the dataset\n         * it has to change the dataset variable directly,\n         * so one way around it, is to clone the data, change it and then\n         * assign it;\n         */\n    }\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\n\nimport { ChartsRoutingModule } from './charts-routing.module';\nimport { ChartsComponent } from './charts.component';\nimport { PageHeaderModule } from '../../shared';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        Ng2Charts,\n        ChartsRoutingModule,\n        PageHeaderModule\n    ],\n    declarations: [ChartsComponent]\n})\nexport class ChartsModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/charts/charts.module.ts"],"sourceRoot":"webpack:///"}