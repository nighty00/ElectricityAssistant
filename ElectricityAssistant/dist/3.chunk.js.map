{"version":3,"sources":["E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home-routing.module.ts","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.component.html","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.component.scss","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.component.ts","E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.module.ts","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/ng2-page-scroll.js","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll-config.js","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll-instance.js","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll-util.service.js","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll.directive.js","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll.module.js","E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll.service.js"],"names":[],"mappings":"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I;YACpB,sBAAsB,EAAE,KAAK;YAC7B,qBAAqB,EAAE,KAAK;SAC7B;IACH,CAAC;IACH,oBAAC;AAAD,CAAC;AA1NY,aAAa;IANzB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,uFAAoC;QACpC,uFAAoC;QACpC,UAAU,EAAE,CAAC,mGAAgB,EAAE,CAAC;KACjC,CAAC;;GACW,aAAa,CA0NzB;AA1NyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVe;AACM;AACQ;AACwB;AACzB;AAEL;AACS;AACR;AAelD,IAAa,UAAU;IAAvB;IAA0B,CAAC;IAAD,iBAAC;AAAD,CAAC;AAAd,UAAU;IAZtB,8EAAQ,CAAC;QACR,OAAO,EAAE;YACP,qEAAY;YACZ,qFAAiB,CAAC,OAAO,EAAE;YAC3B,kFAAc,CAAC,OAAO,EAAE;YACxB,+EAAiB;YACjB,wDAAS;YACT,iEAAgB;YAChB,4EAAmB;SACpB;QACD,YAAY,EAAE,CAAC,sEAAa,CAAC;KAC9B,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;ACvBvB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;AC1GR;AAAA;AACA;AACA;AACuB;AACI;AACa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,4BAA4B;AAC5B;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qIAAoE,8EAA8E,EAAE;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qIAAoE,iFAAiF,EAAE;AACvJ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;;;;;;;;;ACjYR;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;;AClC2D;AACA;AAChD;AACS;AACC;AACW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B;AAC7B;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C;AAC7C,SAAS,6FAA2B;AACpC,SAAS,sFAA6B,gEAAiB,IAAI;AAC3D,SAAS,gCAAgC,0IAAkC,IAAI;AAC/E,MAAM;AACN;AACA,wBAAwB,6DAAc;AACtC,kBAAkB,6DAAc;AAChC,8BAA8B,6DAAc;AAC5C,kCAAkC,6DAAc;AAChD,8BAA8B,6DAAc;AAC5C,gCAAgC,6DAAc;AAC9C,6BAA6B,6DAAc;AAC3C,8BAA8B,6DAAc;AAC5C,qCAAqC,6DAAc;AACnD,kCAAkC,6DAAc;AAChD,wBAAwB,6DAAc;AACtC,8BAA8B,8DAAe;AAC7C;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;AC3HR;AAAA;AACA;AACA;AACuB;AACJ;AACyC;AACvC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;AACO;;;;;;;;;;;;;;;AC/B4C;AACzB;AACa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,6CAA6C,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,yBAAyB;AACniBAAiB;AACjB;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"3.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home-routing.module.ts","module.exports = \"<div [@routerTransition]>\\n  <div class=\\\"row justify-content-center\\\">\\n    <h2 class=\\\"text-muted\\\">Electricity Assistance <small>Global Chilling</small></h2>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <ngb-carousel>\\n        <ng-template ngbSlide *ngFor=\\\"let slider of sliders\\\">\\n          <img class=\\\"img-fluid mx-auto d-block\\\" [src]=\\\"slider.imagePath\\\" alt=\\\"Random first slide\\\" width=\\\"100%\\\" />\\n          <div class=\\\"carousel-caption\\\">\\n            <a id=\\\"startPoint\\\" pageScroll href=\\\"#startPoint\\\" class=\\\"btn btn-lg btn-success\\\" style=\\\"margin: 20px\\\"\\n            (click)=startBtnClick()>Start saving your bills!</a>\\n          </div>\\n        </ng-template>\\n      </ngb-carousel>\\n    </div>\\n  </div>\\n  <br/>\\n\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <fieldset #inputFieldSet [ngClass]=\\\"inputFieldSetClasses\\\">\\n        <input #inputNumber [ngClass]=\\\"inputNumberClasses\\\" type=\\\"number\\\" (keyup.enter)=\\\"getAverageUsageInput(inputNumber.value)\\\"\\n          (keyup)=\\\"checkValidation($event)\\\" placeholder=\\\"Input your electricity usage last month(kWh)\\\" />\\n      </fieldset>\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <div class=\\\"form-group\\\">\\n        <select #monthSelector class=\\\"form-control\\\">\\n                  <option>--please select month--</option>\\n                  <option>January</option>\\n                  <option>February</option>\\n                  <option>March</option>\\n                  <option>April</option>\\n                  <option>May</option>\\n                  <option>June</option>\\n                  <option>July</option>\\n                  <option>August</option>\\n                  <option>Septemper</option>\\n                  <option>October</option>\\n                  <option>November</option>\\n                  <option>December</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-1\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"getAverageUsageInput(inputNumber.value, monthSelector.value)\\\">Confirm</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!isMonthSelected\\\">\\n    <div class=\\\"alert alert-danger col-md-6\\\">\\n      <strong>Invalid input</strong> Please select the month.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"showCharts\\\">\\n    <div class=\\\"col col-sm-6\\\">\\n      <!-- World Bar Chart -->\\n      <div #worldBarChart class=\\\"card mb-3\\\" *ngIf=\\\"worldOrAustralia == 'world'\\\">\\n        <div class=\\\"card-header\\\">\\n          Average electricity usage (kWh)\\n        </div>\\n        <div class=\\\"card-block\\\">\\n          <canvas baseChart [datasets]=\\\"barChartDataWorld\\\" \\n            [labels]=\\\"barChartLabelsWorld\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\" \\n            [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n          </canvas>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"showWorld()\\\">World</button>\\n          <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"showAustralia()\\\">Australia</button>\\n        </div>\\n      </div>\\n\\n      <!-- Australia Bar Chart -->\\n      <div #australiaBarChart class=\\\"card mb-3\\\" *ngIf=\\\"worldOrAustralia == 'Australia'\\\">\\n          <div class=\\\"card-header\\\">\\n            Average electricity usage (kWh)\\n          </div>\\n          <div class=\\\"card-block\\\">\\n            <canvas baseChart [datasets]=\\\"barChartDataAustralia\\\"\\n              [labels]=\\\"barChartLabelsAustralia\\\" [options]=\\\"barChartOptions\\\" [legend]=\\\"barChartLegend\\\" \\n              [chartType]=\\\"barChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n            </canvas>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"showWorld()\\\">World</button>\\n            <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"showAustralia()\\\">Australia</button>\\n          </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col col-sm-6\\\">\\n      <div class=\\\"card mb-3\\\">\\n        <div class=\\\"card-header\\\">\\n          Your electricity comes from different sources (kWh)\\n        </div>\\n        <div class=\\\"card-block\\\">\\n          <canvas baseChart height=\\\"180px\\\" [data]=\\\"doughnutChartData\\\" [labels]=\\\"doughnutChartLabels\\\" [chartType]=\\\"doughnutChartType\\\"\\n            (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n            <!--(chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"-->\\n          </canvas>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <br/>\\n\\n  <h1 *ngIf=\\\"showCharts\\\">Total CO<sub>2</sub> emission: {{totalCo2Emission | number: '.1-2'}}kg/year</h1>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\\n  <br/><br/><br/><br/><br/><br/><br/><br/><br/>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.component.html\n// module id = ../../../../../src/app/layout/home/home.component.html\n// module chunks = 3","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.component.scss\n// module id = ../../../../../src/app/layout/home/home.component.scss\n// module chunks = 3","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { PageScrollConfig, PageScrollService, PageScrollInstance } from 'ng2-page-scroll';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [routerTransition()]\n})\nexport class HomeComponent implements OnInit {\n\n\n  //user monthly electricity usage\n  public averageUsage: number;\n  public monthSelected: string;\n  //input validation classes\n  public inputFieldSetClasses: object;\n  public inputNumberClasses: object;\n  //sliders\n  public sliders: Array<any> = [];\n  //show charts\n  public showCharts: boolean = false;\n  //validation\n  public isMonthSelected = true;\n\n  // bar chart\n  public worldOrAustralia: string;\n  public barChartType: string = 'horizontalBar';\n  public barChartLegend: boolean = true;\n  public barChartOptions: any = {\n    scaleShowVerticalLines: false,\n    responsive: true\n  };\n  public barChartLabelsWorld: string[];\n  public barChartLabelsAustralia: string[];\n  public barChartDataWorld: any[];\n  public barChartDataAustralia: any[];\n\n  // Doughnut\n  public doughnutChartLabels: string[];\n  public doughnutChartData: number[];\n  public doughnutChartType: string = 'doughnut';\n\n  public totalCo2Emission: number;\n  public totalCo2EmissionPerKWH: number;\n  public energyPercentage: any = {\n    coal: 0.612,\n    gas: 0.219,\n    hydro: 0.074,\n    wind: 0.041,\n    oil: 0.02,\n    solar: 0.02,\n    biofuels: 0.014\n  }\n  public co2Emission: any = {\n    coal: 1001,\n    gas: 477,\n    hydro: 86,\n    wind: 12,\n    oil: 652,\n    solar: 54,\n    biofuels: 549\n  }\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.sliders.push(\n      {\n        imagePath: 'assets/images/img1.jpg',\n        label: '',\n        text: ''\n      },\n      {\n        imagePath: 'assets/images/img2.jpg',\n        label: '',\n        text: ''\n      },\n      {\n        imagePath: 'assets/images/img3.jpg',\n        label: '',\n        text: ''\n      },\n      {\n        imagePath: 'assets/images/img4.jpg',\n        label: '',\n        text: ''\n      },\n    );\n  }\n\n  /**\n   * Charts event\n   */\n  public chartClicked(e: any): void {\n    // console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    // console.log(e);\n  }\n\n  /**\n   * click start button\n   */\n  public startBtnClick(): void {\n\n  }\n\n  /**\n   * Button event\n   */\n  public getAverageUsageInput(inputNumber: number, inputMonth: string): void {\n    if (inputMonth == \"--please select month--\") {\n      this.isMonthSelected = false;\n    }\n    else if (inputNumber != 0) {\n      this.isMonthSelected = true;\n      this.monthSelected = inputMonth;\n      if (this.monthSelected == \"December\" || this.monthSelected == \"January\" || this.monthSelected == \"February\") {\n        this.averageUsage = inputNumber * 12;\n      }\n      else if (this.monthSelected == \"March\" || this.monthSelected == \"April\" || this.monthSelected == \"May\") {\n        this.averageUsage = inputNumber * 12.5;\n      }\n      else if (this.monthSelected == \"June\" || this.monthSelected == \"July\" || this.monthSelected == \"August\") {\n        this.averageUsage = inputNumber * 10.345;\n      }\n      else {\n        this.averageUsage = inputNumber * 13.636;\n      }\n\n      //bar chart\n      this.barChartDataWorld = [\n        { data: [this.averageUsage], label: 'Your usage' },\n        { data: [0, 11879, 11698, 7227, 5513, 4648, 3512, 3471, 2419, 1349, 900, 570], label: 'World Average usage' }\n      ];\n      this.barChartDataAustralia = [\n        { data: [this.averageUsage], label: 'Your usage' },\n        { data: [0, 10056, 8550, 7639, 7626, 7227, 6873, 6790, 6198, 5000], label: 'Australia Average usage' }\n      ];\n      //doughnut Chart\n      this.doughnutChartData = [this.averageUsage * this.energyPercentage.coal,\n      this.averageUsage * this.energyPercentage.gas,\n      this.averageUsage * this.energyPercentage.hydro,\n      this.averageUsage * this.energyPercentage.wind,\n      this.averageUsage * this.energyPercentage.oil,\n      this.averageUsage * this.energyPercentage.solar,\n      this.averageUsage * this.energyPercentage.biofuels\n      ];\n      this.totalCo2Emission = this.totalCo2EmissionPerKWH * this.averageUsage / 1000;\n\n      this.showCharts = true;\n    }\n  }\n\n  public checkValidation(event: any): void {\n    if (event.target.value == 0) {\n      this.inputFieldSetClasses = {\n        \"form-group\": true,\n        \"has-success\": false,\n        \"has-danger\": true\n      }\n      this.inputNumberClasses = {\n        \"form-control\": true,\n        \"form-control-success\": false,\n        \"form-control-danger\": true\n      }\n    }\n    else {\n      this.inputFieldSetClasses = {\n        \"form-group\": true,\n        \"has-success\": true,\n        \"has-danger\": false\n      }\n      this.inputNumberClasses = {\n        \"form-control\": true,\n        \"form-control-success\": true,\n        \"form-control-danger\": false\n      }\n    }\n  }\n\n  public showWorld(): void {\n    this.worldOrAustralia = \"world\";\n  }\n\n  public showAustralia(): void {\n    this.worldOrAustralia = \"Australia\";\n  }\n\n  ngOnInit() {\n    //bar chart initiation\n    this.worldOrAustralia = \"world\";\n    this.barChartLabelsWorld = ['You', 'Cananda', 'USA', 'Australia', 'Japan', 'UK', 'Germany', 'World', 'Russia', 'China', 'India', 'Nigeria'];\n    this.barChartLabelsAustralia = ['You', 'ACT', 'Tasmania', 'NSW', 'VIC', 'Australia', 'Queensland', 'NT', 'WA', 'SA'];\n    this.barChartDataWorld = [\n      { data: [0], label: 'Your usage' },\n      { data: [0, 11879, 11698, 7227, 5513, 4648, 3512, 3471, 2419, 1349, 900, 570], label: 'World Average usage' }\n    ];\n    this.barChartDataAustralia = [\n      { data: [0], label: 'Your usage' },\n      { data: [0, 10056, 8550, 7639, 7626, 7227, 6873, 6790, 6198, 5000], label: 'Australia Average usage' }\n    ];\n    this.doughnutChartLabels = ['Coal', 'Gas', 'Hydro', 'Wind', \"Oil\", \"Solar\", \"Biofuels\"];\n    this.doughnutChartData = [1, 1, 1, 1, 1, 1, 1];\n    this.totalCo2EmissionPerKWH = this.energyPercentage.coal * this.co2Emission.coal\n      + this.energyPercentage.gas * this.co2Emission.gas\n      + this.energyPercentage.hydro * this.co2Emission.hydro\n      + this.energyPercentage.wind * this.co2Emission.wind\n      + this.energyPercentage.oil * this.co2Emission.oil\n      + this.energyPercentage.solar * this.co2Emission.solar\n      + this.energyPercentage.biofuels * this.co2Emission.biofuels;\n\n    //inputClasses initiation\n    this.inputFieldSetClasses = {\n      \"form-group\": true,\n      \"has-success\": false,\n      \"has-danger\": false\n    }\n    this.inputNumberClasses = {\n      \"form-control\": true,\n      \"form-control-success\": false,\n      \"form-control-danger\": false\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Ng2PageScrollModule } from 'ng2-page-scroll';\n\nimport { HomeComponent } from './home.component';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { PageHeaderModule } from './../../shared';\nimport { StatModule } from '../../shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbCarouselModule.forRoot(),\n    NgbAlertModule.forRoot(),\n    HomeRoutingModule,\n    Ng2Charts,\n    PageHeaderModule,\n    Ng2PageScrollModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/monash semester 4/GitRepository/ElectricityAssistant/src/app/layout/home/home.module.ts","export * from './src/ng2-page-scroll.directive';\nexport * from './src/ng2-page-scroll.service';\nexport * from './src/ng2-page-scroll-config';\nexport * from './src/ng2-page-scroll-instance';\nexport * from './src/ng2-page-scroll-util.service';\nexport * from './src/ng2-page-scroll.module';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/ng2-page-scroll.js\n// module id = ../../../../ng2-page-scroll/ng2-page-scroll.js\n// module chunks = 3","var EasingLogic = (function () {\n    function EasingLogic() {\n    }\n    return EasingLogic;\n}());\nexport { EasingLogic };\nvar PageScrollConfig = (function () {\n    function PageScrollConfig() {\n    }\n    Object.defineProperty(PageScrollConfig, \"defaultEasingLogic\", {\n        // Getter and setter to avoid auto completion to suggest calling the method\n        get: function () {\n            return PageScrollConfig._easingLogic;\n        },\n        set: function (easingLogic) {\n            PageScrollConfig._easingLogic = easingLogic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The number of milliseconds to wait till updating the scroll position again.\n     * Small amounts may produce smoother animations but require more processing power.\n     * @type {number}\n     * @private\n     */\n    PageScrollConfig._interval = 10;\n    /**\n     * The amount of pixels that need to be between the current scrollTop/scrollLeft position\n     * and the target position the cause a scroll animation. In case distance is below\n     * this threshold, an immediate jump will be performed.\n     * Due to dpi or rounding irregularities in browsers floating point numbers for scrollTop/scrollLeft values\n     * are possible, making a === comparison of current scrollTop or scrollLeft and target scrollPosition error-prone.\n     * @type {number}\n     * @private\n     */\n    PageScrollConfig._minScrollDistance = 2;\n    /**\n     * Name of the default namespace.\n     * @type {string}\n     * @private\n     */\n    PageScrollConfig._defaultNamespace = 'default';\n    /**\n     * Whether by default the scrolling should happen in vertical direction (by manipulating the scrollTop property)\n     * (= true; default) or in horizontal direction (by manipulating the scrollLeft property) (= false\n     * @type {boolean}\n     */\n    PageScrollConfig.defaultIsVerticalScrolling = true;\n    /**\n     * How many console logs should be emitted.\n     * 0: None\n     * 2: If animation could not be started due to missing target, \"already at destination\" or similar reasons\n     * 5: All scroll position values that get set\n     * @type {boolean}\n     * @private\n     */\n    PageScrollConfig._logLevel = 2;\n    /**\n     * The duration how long a scrollTo animation should last by default.\n     * May be overridden using the page-scroll-duration attribute on a single ng2PageScroll instance.\n     * @type {number}\n     */\n    PageScrollConfig.defaultDuration = 1250;\n    /**\n     * The distance in pixels above scroll target where the animation should stop. Setting a positive number results in\n     * the scroll target being more in the middle of the screen, negative numbers will produce scrolling \"too far\"\n     * @type {number}\n     */\n    PageScrollConfig.defaultScrollOffset = 0;\n    /**\n     * Whether by default for inline scroll animations the advanced offset calculation should take place (true) or\n     * not (false). Default is false.\n     * The advanced offset calculation will traverse the DOM tree upwards, starting at the scrollTarget, until it finds\n     * the scrollingView container element. Along the way the offset positions of the relative positioned\n     * (position: relative) elements will be taken into account for calculating the target elements position.\n     * @type {boolean}\n     */\n    PageScrollConfig.defaultAdvancedInlineOffsetCalculation = false;\n    /**\n     * The events that are listened to on the body to decide whether a scroll animation has been interfered/interrupted by the user\n     * @type {string[]}\n     * @private\n     */\n    PageScrollConfig._interruptEvents = ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'];\n    /**\n     * The keys that are considered to interrupt a scroll animation (mainly the arrow keys). All other key presses will not stop the\n     * scroll animation.\n     * @type {number[]}\n     * @private\n     */\n    PageScrollConfig._interruptKeys = [33, 34, 35, 36, 38, 40];\n    /**\n     * Whether a scroll animation should be interruptible by user interaction (true) or not (false). If the user performs an\n     * interrupting event while a scroll animation takes place, the scroll animation stops.\n     * @type {boolean}\n     */\n    PageScrollConfig.defaultInterruptible = true;\n    PageScrollConfig._easingLogic = {\n        ease: function (t, b, c, d) {\n            // Linear easing\n            return c * t / d + b;\n        }\n    };\n    return PageScrollConfig;\n}());\nexport { PageScrollConfig };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll-config.js\n// module id = ../../../../ng2-page-scroll/src/ng2-page-scroll-config.js\n// module chunks = 3","/**\n * Created by sebastianfuss on 29.08.16.\n */\nimport { EventEmitter } from '@angular/core';\nimport { PageScrollConfig } from './ng2-page-scroll-config';\nimport { PageScrollUtilService as Util } from './ng2-page-scroll-util.service';\n/**\n * Represents a scrolling action\n */\nvar PageScrollInstance = (function () {\n    /**\n     * Private constructor, requires the properties assumed to be the bare minimum.\n     * Use the factory methods to create instances:\n     *      {@link PageScrollInstance#simpleInstance}\n     *      {@link PageScrollInstance#newInstance}\n     * @param namespace\n     * @param document\n     */\n    function PageScrollInstance(namespace, document) {\n        /**\n         * These properties will be set during instance construction and default to their defaults from PageScrollConfig\n         */\n        /* A namespace to \"group\" scroll animations together and stopping some does not stop others */\n        this._namespace = PageScrollConfig._defaultNamespace;\n        /* Whether we scroll vertically (true) or horizontally (false) */\n        this._verticalScrolling = PageScrollConfig.defaultIsVerticalScrolling;\n        /* Offset in px that the animation should stop above that target element */\n        this._offset = PageScrollConfig.defaultScrollOffset;\n        /* Duration in milliseconds the scroll animation should last */\n        this._duration = PageScrollConfig.defaultDuration;\n        /* Easing function to manipulate the scrollTop/scrollLeft value over time */\n        this._easingLogic = PageScrollConfig.defaultEasingLogic;\n        /* Boolean whether the scroll animation should stop on user interruption or not */\n        this._interruptible = PageScrollConfig.defaultInterruptible;\n        /* Whether the advanded offset calculation for inline scrolling should be used */\n        this._advancedInlineOffsetCalculation = PageScrollConfig.defaultAdvancedInlineOffsetCalculation;\n        /* Event emitter to notify the world about the scrolling */\n        this._pageScrollFinish = new EventEmitter();\n        /**\n         * These properties will be set/manipulated if the scroll animation starts\n         */\n        /* The initial value of the scrollTop or scrollLeft position when the animation starts */\n        this._startScrollPosition = 0;\n        /* Whether an interrupt listener is attached to the body or not */\n        this._interruptListenersAttached = false;\n        /* References to the timer instance that is used to perform the scroll animation to be\n         able to clear it on animation end*/\n        this._timer = null;\n        this._namespace = namespace;\n        this.document = document;\n    }\n    /*\n     * Factory methods for instance creation\n     */\n    PageScrollInstance.simpleInstance = function (document, scrollTarget, namespace) {\n        return PageScrollInstance.newInstance({\n            document: document,\n            scrollTarget: scrollTarget,\n            namespace: namespace\n        });\n    };\n    PageScrollInstance.newInstance = function (options) {\n        if (Util.isUndefinedOrNull(options.namespace) || options.namespace.length <= 0) {\n            options.namespace = PageScrollConfig._defaultNamespace;\n        }\n        var pageScrollInstance = new PageScrollInstance(options.namespace, document);\n        if (Util.isUndefinedOrNull(options.scrollingViews) || options.scrollingViews.length === 0) {\n            pageScrollInstance._isInlineScrolling = false;\n            pageScrollInstance._scrollingViews = [document.documentElement, document.body, document.body.parentNode];\n        }\n        else {\n            pageScrollInstance._isInlineScrolling = true;\n            pageScrollInstance._scrollingViews = options.scrollingViews;\n        }\n        pageScrollInstance._scrollTarget = options.scrollTarget;\n        if (!Util.isUndefinedOrNull(options.verticalScrolling)) {\n            pageScrollInstance._verticalScrolling = options.verticalScrolling;\n        }\n        if (!Util.isUndefinedOrNull(options.pageScrollOffset)) {\n            pageScrollInstance._offset = options.pageScrollOffset;\n        }\n        if (!Util.isUndefinedOrNull(options.pageScrollEasingLogic)) {\n            pageScrollInstance._easingLogic = options.pageScrollEasingLogic;\n        }\n        if (Util.isUndefinedOrNull(options.pageScrollDuration) && !Util.isUndefinedOrNull(options.pageScrollSpeed)) {\n            // No duration specified in the options, only in this case we use the speed option when present\n            pageScrollInstance._speed = options.pageScrollSpeed;\n            pageScrollInstance._duration = undefined;\n        }\n        else if (!Util.isUndefinedOrNull(options.pageScrollDuration)) {\n            pageScrollInstance._duration = options.pageScrollDuration;\n        }\n        if (!Util.isUndefinedOrNull(options.pageScrollFinishListener)) {\n            pageScrollInstance._pageScrollFinish = options.pageScrollFinishListener;\n        }\n        pageScrollInstance._interruptible = options.pageScrollInterruptible ||\n            (Util.isUndefinedOrNull(options.pageScrollInterruptible) && PageScrollConfig.defaultInterruptible);\n        pageScrollInstance._advancedInlineOffsetCalculation = options.advancedInlineOffsetCalculation ||\n            (Util.isUndefinedOrNull(options.advancedInlineOffsetCalculation) &&\n                PageScrollConfig.defaultAdvancedInlineOffsetCalculation);\n        return pageScrollInstance;\n    };\n    PageScrollInstance.prototype.getScrollPropertyValue = function (scrollingView) {\n        if (!this.verticalScrolling) {\n            return scrollingView.scrollLeft;\n        }\n        return scrollingView.scrollTop;\n    };\n    /**\n     * Extract the exact location of the scrollTarget element.\n     *\n     * Extract the scrollTarget HTMLElement from the given PageScrollTarget object. The latter one may be\n     * a string like \"#heading2\", then this method returns the corresponding DOM element for that id.\n     *\n     * @returns {HTMLElement}\n     */\n    PageScrollInstance.prototype.extractScrollTargetPosition = function () {\n        var scrollTargetElement;\n        if (typeof this._scrollTarget === 'string') {\n            scrollTargetElement = this.document.querySelector(this._scrollTarget);\n        }\n        else {\n            scrollTargetElement = this._scrollTarget;\n        }\n        if (scrollTargetElement === null || scrollTargetElement === undefined) {\n            // Scroll target not found\n            return { top: NaN, left: NaN };\n        }\n        if (this._isInlineScrolling) {\n            var position = { top: scrollTargetElement.offsetTop, left: scrollTargetElement.offsetLeft };\n            if (this._advancedInlineOffsetCalculation && this.scrollingViews.length === 1) {\n                var accumulatedParentsPos = { top: 0, left: 0 };\n                // not named window to make sure we're not getting the global window variable by accident\n                var theWindow = scrollTargetElement.ownerDocument.defaultView;\n                var parentFound = false;\n                // Start parent is the immediate parent\n                var parent_1 = scrollTargetElement.parentElement;\n                // Iterate upwards all parents\n                while (!parentFound && !Util.isUndefinedOrNull(parent_1)) {\n                    if (theWindow.getComputedStyle(parent_1).getPropertyValue('position') === 'relative') {\n                        accumulatedParentsPos.top += parent_1.offsetTop;\n                        accumulatedParentsPos.left += parent_1.offsetLeft;\n                    }\n                    // Next iteration\n                    parent_1 = parent_1.parentElement;\n                    parentFound = parent_1 === this.scrollingViews[0];\n                }\n                if (parentFound) {\n                    // Only use the results if we found the parent, otherwise we accumulated too much anyway\n                    position.top += accumulatedParentsPos.top;\n                    position.left += accumulatedParentsPos.left;\n                }\n                else {\n                    if (PageScrollConfig._logLevel >= 2) {\n                        console.warn('Unable to find nested scrolling targets parent!');\n                    }\n                }\n            }\n            return position;\n        }\n        return Util.extractElementPosition(this.document, scrollTargetElement);\n    };\n    /**\n     * Get the top offset of the scroll animation.\n     * This automatically takes the offset location of the scrolling container/scrolling view\n     * into account (for nested/inline scrolling).\n     *\n     * @returns {number}\n     */\n    PageScrollInstance.prototype.getCurrentOffset = function () {\n        return this._offset;\n    };\n    /**\n     * Sets the \"scrollTop\" or \"scrollLeft\" property for all scrollingViews to the provided value\n     * @param position\n     * @return true if at least for one ScrollTopSource the scrollTop/scrollLeft value could be set and it kept the new value.\n     *          false if it failed for all ScrollingViews, meaning that we should stop the animation\n     *          (probably because we're at the end of the scrolling region)\n     */\n    PageScrollInstance.prototype.setScrollPosition = function (position) {\n        var _this = this;\n        if (PageScrollConfig._logLevel >= 5) {\n            console.warn('Scroll Position: ' + position);\n        }\n        // Set the new scrollTop/scrollLeft to all scrollingViews elements\n        return this.scrollingViews.reduce(function (oneAlreadyWorked, scrollingView) {\n            var startScrollPropertyValue = _this.getScrollPropertyValue(scrollingView);\n            if (scrollingView && !Util.isUndefinedOrNull(startScrollPropertyValue)) {\n                var scrollDistance = Math.abs(startScrollPropertyValue - position);\n                // The movement we need to perform is less than 2px\n                // This we consider a small movement which some browser may not perform when\n                // changing the scrollTop/scrollLeft property\n                // Thus in this cases we do not stop the scroll animation, although setting the\n                // scrollTop/scrollLeft value \"fails\"\n                var isSmallMovement = scrollDistance < PageScrollConfig._minScrollDistance;\n                if (!_this.verticalScrolling) {\n                    scrollingView.scrollLeft = position;\n                }\n                else {\n                    scrollingView.scrollTop = position;\n                }\n                // Return true of setting the new scrollTop/scrollLeft value worked\n                // We consider that it worked if the new scrollTop/scrollLeft value is closer to the\n                // desired scrollTop/scrollLeft than before (it might not be exactly the value we\n                // set due to dpi or rounding irregularities)\n                if (isSmallMovement || scrollDistance > Math.abs(_this.getScrollPropertyValue(scrollingView) - position)) {\n                    return true;\n                }\n            }\n            return oneAlreadyWorked;\n        }, false);\n    };\n    /**\n     * Trigger firing a animation finish event\n     * @param value Whether the animation finished at the target (true) or got interrupted (false)\n     */\n    PageScrollInstance.prototype.fireEvent = function (value) {\n        if (this._pageScrollFinish) {\n            this._pageScrollFinish.emit(value);\n        }\n    };\n    /**\n     * Attach the interrupt listeners to the PageScrollInstance body. The given interruptReporter\n     * will be called if any of the attached events is fired.\n     *\n     * Possibly attached interruptListeners are automatically removed from the body before the new one will be attached.\n     *\n     * @param interruptReporter\n     */\n    PageScrollInstance.prototype.attachInterruptListeners = function (interruptReporter) {\n        var _this = this;\n        if (this._interruptListenersAttached) {\n            // Detach possibly existing listeners first\n            this.detachInterruptListeners();\n        }\n        this._interruptListener = function (event) {\n            interruptReporter.report(event, _this);\n        };\n        PageScrollConfig._interruptEvents.forEach(function (event) { return _this.document.body.addEventListener(event, _this._interruptListener); });\n        this._interruptListenersAttached = true;\n    };\n    /**\n     * Remove event listeners from the body and stop listening for events that might be treated as \"animation\n     * interrupt\" events.\n     */\n    PageScrollInstance.prototype.detachInterruptListeners = function () {\n        var _this = this;\n        PageScrollConfig._interruptEvents.forEach(function (event) { return _this.document.body.removeEventListener(event, _this._interruptListener); });\n        this._interruptListenersAttached = false;\n    };\n    Object.defineProperty(PageScrollInstance.prototype, \"namespace\", {\n        get: function () {\n            return this._namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"scrollTarget\", {\n        get: function () {\n            return this._scrollTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"verticalScrolling\", {\n        get: function () {\n            return this._verticalScrolling;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"scrollingViews\", {\n        get: function () {\n            return this._scrollingViews;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"startScrollPosition\", {\n        get: function () {\n            return this._startScrollPosition;\n        },\n        set: function (value) {\n            this._startScrollPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"targetScrollPosition\", {\n        get: function () {\n            return this._targetScrollPosition;\n        },\n        set: function (value) {\n            this._targetScrollPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"distanceToScroll\", {\n        get: function () {\n            return this._distanceToScroll;\n        },\n        set: function (value) {\n            this._distanceToScroll = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"executionDuration\", {\n        get: function () {\n            return this._executionDuration;\n        },\n        set: function (value) {\n            this._executionDuration = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"duration\", {\n        get: function () {\n            return this._duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"speed\", {\n        get: function () {\n            return this._speed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"easingLogic\", {\n        get: function () {\n            return this._easingLogic;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"interruptible\", {\n        get: function () {\n            return this._interruptible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"startTime\", {\n        get: function () {\n            return this._startTime;\n        },\n        set: function (value) {\n            this._startTime = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"endTime\", {\n        get: function () {\n            return this._endTime;\n        },\n        set: function (value) {\n            this._endTime = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"timer\", {\n        get: function () {\n            return this._timer;\n        },\n        set: function (value) {\n            this._timer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageScrollInstance.prototype, \"interruptListenersAttached\", {\n        get: function () {\n            return this._interruptListenersAttached;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageScrollInstance;\n}());\nexport { PageScrollInstance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll-instance.js\n// module id = ../../../../ng2-page-scroll/src/ng2-page-scroll-instance.js\n// module chunks = 3","/**\n * Created by sebastianfuss on 02.09.16.\n */\nvar PageScrollUtilService = (function () {\n    function PageScrollUtilService() {\n    }\n    /**\n     * Util method to check whether a given variable is either undefined or null\n     * @param variable\n     * @returns {boolean} true the variable is undefined or null\n     */\n    PageScrollUtilService.isUndefinedOrNull = function (variable) {\n        return (typeof variable === 'undefined') || variable === undefined || variable === null;\n    };\n    PageScrollUtilService.extractElementPosition = function (document, scrollTargetElement) {\n        var body = document.body;\n        var docEl = document.documentElement;\n        var windowPageYOffset = document.defaultView && document.defaultView.pageYOffset || undefined;\n        var windowPageXOffset = document.defaultView && document.defaultView.pageXOffset || undefined;\n        var scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\n        var scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\n        var clientTop = docEl.clientTop || body.clientTop || 0;\n        var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n        if (PageScrollUtilService.isUndefinedOrNull(scrollTargetElement)) {\n            // No element found, so return the current position to not cause any change in scroll position\n            return { top: scrollTop, left: scrollLeft };\n        }\n        var box = scrollTargetElement.getBoundingClientRect();\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    return PageScrollUtilService;\n}());\nexport { PageScrollUtilService };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll-util.service.js\n// module id = ../../../../ng2-page-scroll/src/ng2-page-scroll-util.service.js\n// module chunks = 3","import { Directive, Input, Output, EventEmitter, Inject, Optional } from '@angular/core';\nimport { Router, NavigationEnd, NavigationError, NavigationCancel } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { PageScrollService } from './ng2-page-scroll.service';\nimport { PageScrollInstance } from './ng2-page-scroll-instance';\nimport { PageScrollUtilService as Util } from './ng2-page-scroll-util.service';\nvar PageScroll = (function () {\n    function PageScroll(pageScrollService, router, document) {\n        this.pageScrollService = pageScrollService;\n        this.router = router;\n        this.pageScrollTarget = null;\n        this.pageScrollHorizontal = null;\n        this.pageScrollOffset = null;\n        this.pageScrollDuration = null;\n        this.pageScrollSpeed = null;\n        this.pageScrollEasing = null;\n        this.pageScrollAdjustHash = false;\n        this.pageScroll = null;\n        this.pageScrollFinish = new EventEmitter();\n        this.document = document;\n    }\n    PageScroll.prototype.ngOnChanges = function (changes) {\n        // Some inputs changed, reset the pageScrollInstance\n        this.pageScrollInstance = undefined;\n    };\n    PageScroll.prototype.ngOnDestroy = function () {\n        if (this.pageScrollInstance) {\n            this.pageScrollService.stop(this.pageScrollInstance);\n        }\n        return undefined;\n    };\n    PageScroll.prototype.generatePageScrollInstance = function () {\n        if (Util.isUndefinedOrNull(this.pageScrollInstance)) {\n            this.pageScrollInstance = PageScrollInstance.newInstance({\n                document: this.document,\n                scrollTarget: this.pageScrollTarget || this.href,\n                scrollingViews: null,\n                namespace: this.pageScroll,\n                verticalScrolling: !this.pageScrollHorizontal,\n                pageScrollOffset: this.pageScrollOffset,\n                pageScrollInterruptible: this.pageScrollInterruptible,\n                pageScrollEasingLogic: this.pageScrollEasing,\n                pageScrollDuration: this.pageScrollDuration,\n                pageScrollSpeed: this.pageScrollSpeed,\n                pageScrollFinishListener: this.pageScrollFinish\n            });\n        }\n        return this.pageScrollInstance;\n    };\n    PageScroll.prototype.pushRouterState = function () {\n        if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.scrollTarget === 'string'\n            && this.pageScrollInstance.scrollTarget.substr(0, 1) === '#') {\n            // \"Navigate\" to the current route again and this time set the fragment/hash\n            this.router.navigate([], {\n                fragment: this.pageScrollInstance.scrollTarget.substr(1),\n                preserveQueryParams: true\n            });\n        }\n    };\n    PageScroll.prototype.scroll = function () {\n        var pageScrollInstance = this.generatePageScrollInstance();\n        this.pushRouterState();\n        this.pageScrollService.start(pageScrollInstance);\n    };\n    PageScroll.prototype.handleClick = function (clickEvent) {\n        var _this = this;\n        if (this.routerLink && this.router !== null && this.router !== undefined) {\n            var urlTree = void 0;\n            if (typeof this.routerLink === 'string') {\n                urlTree = this.router.parseUrl(this.routerLink);\n            }\n            else {\n                urlTree = this.router.createUrlTree(this.routerLink);\n            }\n            if (!this.router.isActive(urlTree, true)) {\n                // We need to navigate their first.\n                // Navigation is handled by the routerLink directive\n                // so we only need to listen for route change\n                var subscription_1 = this.router.events.subscribe(function (routerEvent) {\n                    if (routerEvent instanceof NavigationEnd) {\n                        subscription_1.unsubscribe();\n                        _this.scroll();\n                    }\n                    else if (routerEvent instanceof NavigationError || routerEvent instanceof NavigationCancel) {\n                        subscription_1.unsubscribe();\n                    }\n                });\n                return false; // to preventDefault()\n            }\n        }\n        this.scroll();\n        return false; // to preventDefault()\n    };\n    PageScroll.decorators = [\n        { type: Directive, args: [{\n                    selector: '[pageScroll]',\n                    host: {\n                        '(click)': 'handleClick($event)',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    PageScroll.ctorParameters = function () { return [\n        { type: PageScrollService, },\n        { type: Router, decorators: [{ type: Optional },] },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    PageScroll.propDecorators = {\n        'routerLink': [{ type: Input },],\n        'href': [{ type: Input },],\n        'pageScrollTarget': [{ type: Input },],\n        'pageScrollHorizontal': [{ type: Input },],\n        'pageScrollOffset': [{ type: Input },],\n        'pageScrollDuration': [{ type: Input },],\n        'pageScrollSpeed': [{ type: Input },],\n        'pageScrollEasing': [{ type: Input },],\n        'pageScrollInterruptible': [{ type: Input },],\n        'pageScrollAdjustHash': [{ type: Input },],\n        'pageScroll': [{ type: Input },],\n        'pageScrollFinish': [{ type: Output },],\n    };\n    return PageScroll;\n}());\nexport { PageScroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll.directive.js\n// module id = ../../../../ng2-page-scroll/src/ng2-page-scroll.directive.js\n// module chunks = 3","/**\n * Created by sebastianfuss on 03.09.16.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NG2PAGESCROLL_SERVICE_PROVIDER, PageScrollService } from './ng2-page-scroll.service';\nimport { PageScroll } from './ng2-page-scroll.directive';\nvar Ng2PageScrollModule = (function () {\n    function Ng2PageScrollModule() {\n    }\n    /** @deprecated since v4.0.0-beta.10 (https://github.com/Nolanus/ng2-page-scroll/pull/190) */\n    Ng2PageScrollModule.forRoot = function () {\n        return {\n            ngModule: Ng2PageScrollModule,\n            providers: [\n                { provide: PageScrollService, useClass: PageScrollService }\n            ]\n        };\n    };\n    Ng2PageScrollModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule],\n                    declarations: [PageScroll],\n                    exports: [PageScroll],\n                    providers: [NG2PAGESCROLL_SERVICE_PROVIDER]\n                },] },\n    ];\n    /** @nocollapse */\n    Ng2PageScrollModule.ctorParameters = function () { return []; };\n    return Ng2PageScrollModule;\n}());\nexport { Ng2PageScrollModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll.module.js\n// module id = ../../../../ng2-page-scroll/src/ng2-page-scroll.module.js\n// module chunks = 3","import { Injectable, Optional, SkipSelf, isDevMode } from '@angular/core';\nimport { PageScrollConfig } from './ng2-page-scroll-config';\nimport { PageScrollUtilService as Util } from './ng2-page-scroll-util.service';\nvar PageScrollService = (function () {\n    function PageScrollService() {\n        var _this = this;\n        this.runningInstances = [];\n        this.onInterrupted = {\n            report: function (event, pageScrollInstance) {\n                if (!pageScrollInstance.interruptible) {\n                    // Non-interruptible anyway, so do not stop anything\n                    return;\n                }\n                var shouldStop = true;\n                if (event.type === 'keyup') {\n                    // Only stop if specific keys have been pressed, for all others don't stop anything\n                    if (PageScrollConfig._interruptKeys.indexOf(event.keyCode) === -1) {\n                        // The pressed key is not in the list of interrupting keys\n                        shouldStop = false;\n                    }\n                }\n                else if (event.type === 'mousedown') {\n                    // For mousedown events we only stop the scroll animation of the mouse has\n                    // been clicked inside the scrolling container\n                    if (!pageScrollInstance.scrollingViews.some(function (scrollingView) { return scrollingView.contains(event.target); })) {\n                        // Mouse clicked an element which is not inside any of the the scrolling containers\n                        shouldStop = false;\n                    }\n                }\n                if (shouldStop) {\n                    _this.stopAll(pageScrollInstance.namespace);\n                }\n            }\n        };\n        if (PageScrollService.instanceCounter > 0 && isDevMode()) {\n            console.warn('An instance of PageScrollService already exists, usually ' +\n                'including one provider should be enough, so double check.');\n        }\n        PageScrollService.instanceCounter++;\n    }\n    PageScrollService.prototype.stopInternal = function (interrupted, pageScrollInstance) {\n        var index = this.runningInstances.indexOf(pageScrollInstance);\n        if (index >= 0) {\n            this.runningInstances.splice(index, 1);\n        }\n        if (pageScrollInstance.interruptListenersAttached) {\n            pageScrollInstance.detachInterruptListeners();\n        }\n        if (pageScrollInstance.timer) {\n            // Clear/Stop the timer\n            clearInterval(pageScrollInstance.timer);\n            // Clear the reference to this timer\n            pageScrollInstance.timer = undefined;\n            pageScrollInstance.fireEvent(!interrupted);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Start a scroll animation. All properties of the animation are stored in the given {@link PageScrollInstance} object.\n     *\n     * This is the core functionality of the whole library.\n     *\n     * @param pageScrollInstance\n     */\n    PageScrollService.prototype.start = function (pageScrollInstance) {\n        var _this = this;\n        // Stop all possibly running scroll animations in the same namespace\n        this.stopAll(pageScrollInstance.namespace);\n        if (pageScrollInstance.scrollingViews === null || pageScrollInstance.scrollingViews.length === 0) {\n            // No scrollingViews specified, thus we can't animate anything\n            if (isDevMode()) {\n                console.warn('No scrollingViews specified, this ng2-page-scroll does not know which DOM elements to scroll');\n            }\n            return;\n        }\n        var startScrollPositionFound = false;\n        // Reset start scroll position to 0. If any of the scrollingViews has a different one, it will be extracted next\n        pageScrollInstance.startScrollPosition = 0;\n        // Get the start scroll position from the scrollingViews (e.g. if the user already scrolled down the content)\n        pageScrollInstance.scrollingViews.forEach(function (scrollingView) {\n            if (Util.isUndefinedOrNull(scrollingView)) {\n                return;\n            }\n            // Get the scrollTop or scrollLeft value of the first scrollingView that returns a value for its \"scrollTop\"\n            // or \"scrollLeft\" property that is not undefined and unequal to 0\n            var scrollPosition = pageScrollInstance.getScrollPropertyValue(scrollingView);\n            if (!startScrollPositionFound && scrollPosition) {\n                // We found a scrollingView that does not have scrollTop or scrollLeft 0\n                // Return the scroll position value, as this will be our startScrollPosition\n                pageScrollInstance.startScrollPosition = scrollPosition;\n                startScrollPositionFound = true;\n            }\n        });\n        var pageScrollOffset = pageScrollInstance.getCurrentOffset();\n        // Calculate the target position that the scroll animation should go to\n        var scrollTargetPosition = pageScrollInstance.extractScrollTargetPosition();\n        pageScrollInstance.targetScrollPosition = Math.round((pageScrollInstance.verticalScrolling ? scrollTargetPosition.top : scrollTargetPosition.left) - pageScrollOffset);\n        // Calculate the distance we need to go in total\n        pageScrollInstance.distanceToScroll = pageScrollInstance.targetScrollPosition - pageScrollInstance.startScrollPosition;\n        if (isNaN(pageScrollInstance.distanceToScroll)) {\n            // We weren't able to find the target position, maybe the element does not exist?\n            if (isDevMode()) {\n                console.log('Scrolling not possible, as we can\\'t find the specified target');\n            }\n            pageScrollInstance.fireEvent(false);\n            return;\n        }\n        // We're at the final destination already\n        // OR we need to scroll down but are already at the end\n        // OR we need to scroll up but are at the top already\n        var allReadyAtDestination = Math.abs(pageScrollInstance.distanceToScroll) < PageScrollConfig._minScrollDistance;\n        // Check how long we need to scroll if a speed option is given\n        // Default executionDuration is the specified duration\n        pageScrollInstance.executionDuration = pageScrollInstance.duration;\n        // Maybe we need to pay attention to the speed option?\n        if (!Util.isUndefinedOrNull(pageScrollInstance.speed) && Util.isUndefinedOrNull(pageScrollInstance.duration)) {\n            // Speed option is set and no duration => calculate duration based on speed and scroll distance\n            pageScrollInstance.executionDuration = Math.abs(pageScrollInstance.distanceToScroll) / pageScrollInstance.speed * 1000;\n        }\n        // We should go there directly, as our \"animation\" would have one big step\n        // only anyway and this way we save the interval stuff\n        var tooShortInterval = pageScrollInstance.executionDuration <= PageScrollConfig._interval;\n        if (allReadyAtDestination || tooShortInterval) {\n            if (isDevMode()) {\n                if (allReadyAtDestination) {\n                    console.log('Scrolling not possible, as we can\\'t get any closer to the destination');\n                }\n                else {\n                    console.log('Scroll duration shorter that interval length, jumping to target');\n                }\n            }\n            pageScrollInstance.setScrollPosition(pageScrollInstance.targetScrollPosition);\n            pageScrollInstance.fireEvent(true);\n            return;\n        }\n        // Register the interrupt listeners if we want an interruptible scroll animation\n        if (pageScrollInstance.interruptible ||\n            (Util.isUndefinedOrNull(pageScrollInstance.interruptible) && PageScrollConfig.defaultInterruptible)) {\n            pageScrollInstance.attachInterruptListeners(this.onInterrupted);\n        }\n        // Let's get started, get the start time...\n        pageScrollInstance.startTime = new Date().getTime();\n        // .. and calculate the end time (when we need to finish at last)\n        pageScrollInstance.endTime = pageScrollInstance.startTime + pageScrollInstance.executionDuration;\n        pageScrollInstance.timer = setInterval(function (_pageScrollInstance) {\n            // Take the current time\n            var currentTime = new Date().getTime();\n            // Determine the new scroll position\n            var newScrollPosition;\n            var stopNow = false;\n            if (_pageScrollInstance.endTime <= currentTime) {\n                // We're over the time already, so go the targetScrollPosition (aka destination)\n                newScrollPosition = _pageScrollInstance.targetScrollPosition;\n                stopNow = true;\n            }\n            else {\n                // Calculate the scroll position based on the current time using the easing function\n                newScrollPosition = Math.round(_pageScrollInstance.easingLogic.ease(currentTime - _pageScrollInstance.startTime, _pageScrollInstance.startScrollPosition, _pageScrollInstance.distanceToScroll, _pageScrollInstance.executionDuration));\n            }\n            // Set the new scrollPosition to all scrollingViews elements\n            if (!_pageScrollInstance.setScrollPosition(newScrollPosition)) {\n                // Setting the new scrollTop/scrollLeft value failed for all ScrollingViews\n                // early stop the scroll animation to save resources\n                stopNow = true;\n            }\n            // At the end do the internal stop maintenance and fire the pageScrollFinish event\n            // (otherwise the event might arrive at \"too early\")\n            if (stopNow) {\n                _this.stopInternal(false, _pageScrollInstance);\n            }\n        }, PageScrollConfig._interval, pageScrollInstance);\n        // Register the instance as running one\n        this.runningInstances.push(pageScrollInstance);\n    };\n    /**\n     * Stop all running scroll animations. Optionally limit to stop only the ones of specific namespace.\n     *\n     * @param namespace\n     * @returns {boolean}\n     */\n    PageScrollService.prototype.stopAll = function (namespace) {\n        if (this.runningInstances.length > 0) {\n            var stoppedSome = false;\n            for (var i = 0; i < this.runningInstances.length; ++i) {\n                var pageScrollInstance = this.runningInstances[i];\n                if (Util.isUndefinedOrNull(namespace) || namespace.length === 0 ||\n                    pageScrollInstance.namespace === namespace) {\n                    stoppedSome = true;\n                    this.stopInternal(true, pageScrollInstance);\n                    // Decrease the counter, as we removed an item from the array we iterate over\n                    i--;\n                }\n            }\n            return stoppedSome;\n        }\n        return false;\n    };\n    PageScrollService.prototype.stop = function (pageScrollInstance) {\n        return this.stopInternal(true, pageScrollInstance);\n    };\n    PageScrollService.instanceCounter = 0;\n    PageScrollService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PageScrollService.ctorParameters = function () { return []; };\n    return PageScrollService;\n}());\nexport { PageScrollService };\n/* singleton pattern taken from https://github.com/angular/angular/issues/13854 */\nexport function NG2PAGESCROLL_SERVICE_PROVIDER_FACTORY(parentDispatcher) {\n    return parentDispatcher || new PageScrollService();\n}\nexport var NG2PAGESCROLL_SERVICE_PROVIDER = {\n    provide: PageScrollService,\n    deps: [[new Optional(), new SkipSelf(), PageScrollService]],\n    useFactory: NG2PAGESCROLL_SERVICE_PROVIDER_FACTORY\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/monash semester 4/GitRepository/ElectricityAssistant/~/ng2-page-scroll/src/ng2-page-scroll.service.js\n// module id = ../../../../ng2-page-scroll/src/ng2-page-scroll.service.js\n// module chunks = 3"],"sourceRoot":"webpack:///"}